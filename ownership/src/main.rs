/**
 * # 堆栈
 * 栈中的数据先进后出，且连续，等大，因此访问速度，申请速度更快。
 * 堆中的数据不连续，每次使用，要经过内存分配，因此访问速度慢。
 *
 * # Rust优化
 * Rust没有垃圾回收 gc 系统，使用过所有者owner来进行管理的。我们
 * 希望，堆上的数据没有重复，清理到不需要的数据，避免内存耗尽。
 *
 */
fn main() {
    println!("Hello, world!");
}
